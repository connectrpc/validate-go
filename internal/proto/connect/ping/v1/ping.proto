// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The canonical location for this file is
// https://github.com/connectrpc/validate-go/blob/main/internal/proto/connect/ping/v1/ping.proto.
syntax = "proto3";

// The connect.ping.v1 package contains an echo service designed to test the
// validate-go implementation.
package connect.ping.v1;

import "buf/validate/validate.proto";

message PingRequest {
  int64 number = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64 = {
      gt: 0,
      lt: 100
    }
  ];
}

message PingResponse {
    int64 number = 1;
}

message SumRequest {
    int64 number = 1 [
        (buf.validate.field).required = true,
        (buf.validate.field).int64 = {
            gt: 0,
            lt: 100
        }
    ];
}

message SumResponse {
    int64 sum = 1;
}

message CountUpRequest {
    int64 number = 1 [
        (buf.validate.field).required = true,
        (buf.validate.field).int64 = {
            gt: 0,
            lt: 100
        }
    ];
}

message CountUpResponse {
    int64 number = 1;
}

service PingService {
  // Ping sends a ping to the server to determine if it's reachable.
  rpc Ping(PingRequest) returns (PingResponse) {}
    // Sum calculates the sum of the numbers sent on the stream.
    rpc Sum(stream SumRequest) returns (SumResponse) {}
    // CountUp returns a stream of the numbers up to the given request.
    rpc CountUp(CountUpRequest) returns (stream CountUpResponse) {}
}
